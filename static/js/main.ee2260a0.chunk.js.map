{"version":3,"sources":["restaurant.svg","serviceWorker.js","restaurant-display/RestaurantDisplay.js","map-display/MapDisplay.js","Filter.js","App.js","layout/AppLayout.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","RestaurantCard","Typography","Title","props","restaurant","className","size","title","name","extra","href","vicinity","rating","repeat","price_level","RestaurantDisplay","allRestaurants","length","src","require","alt","map","index","key","MapDisplay","React","useState","mapObj","setMapObj","L","LayerGroup","useEffect","center","zoom","layers","tileLayer","attribution","markerIcon","icon","iconUrl","iconSize","shadowUrl","shadowSize","i","geometry","lat","long","lng","marker","bindPopup","addTo","openPopup","id","Filter","highRating","lowRating","aToZ","zToA","highPrice","lowPrice","far","Item","onClick","Search","Input","Option","Select","App","setAllRestaurants","locationType","setLocationType","searchLocation","setSearchLocation","searchRadius","axios","GP_API_KEY","process","cleanUp","str","replace","toLowerCase","getNearByRestaurants","get","params","radius","type","opennow","then","response","data","results","catch","error","gutter","span","level","Group","compact","style","width","placeholder","onSearch","searchString","address","trim","loc","makePlacesRequest","enterButton","value","onChange","e","marginTop","overlay","arr","newArray","slice","sort","a","b","reverse","cleanup","console","log","lat1","lat2","lon1","lon2","φ1","Math","PI","φ2","Δφ","Δλ","d","sin","cos","distMeters","atan2","sqrt","trigger","placement","preventDefault","DownOutlined","Header","Layout","Content","Footer","AppLayout","padding","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"mJAAAA,EAAOC,QAAU,IAA0B,wC,8ICYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2GCcAC,G,OA1BYC,IAAVC,MA0Be,SAACC,GAAW,IACzBC,EAAeD,EAAfC,WAER,OACE,kBAAC,IAAD,CACEC,UAAU,kBACVC,KAAK,QACLC,MAAOH,EAAWI,KAClBC,MAAO,uBAAGC,KAAK,KAAR,SACP,uBAAGL,UAAU,aAAY,4BAAKD,EAAWO,WACzC,uBAAGN,UAAU,aAAb,WAAkCD,EAAWQ,QAC7C,uBAAGP,UAAU,aAAb,gBAAuC,IAAIQ,OAAOT,EAAWU,iBAKpDC,EAxCW,SAACZ,GAAW,IAC5Ba,EAAmBb,EAAnBa,eAER,OACE,yBAAKX,UAAU,sBACb,yBAAKA,UAAU,iCACe,IAA1BW,EAAeC,OACf,yBAAKZ,UAAU,UAAUa,IAAKC,EAAQ,KAAsBC,IAAI,SAEhE,6BAEIJ,EAAeK,KAAI,SAACjB,EAAYkB,GAC9B,OACE,kBAAC,EAAD,CAAgBC,IAAKD,EAAOlB,WAAYA,W,0BCkC3CoB,G,OAhDI,SAAC,GAAwB,IAAtBR,EAAqB,EAArBA,eAAqB,EACbS,IAAMC,WADO,mBAClCC,EADkC,KAC1BC,EAD0B,OAELH,IAAMC,SAAS,IAAIG,IAAEC,YAFhB,gCAGXL,IAAMC,SAAS,KAHJ,6BA6CzC,OAxCAD,IAAMM,WAAU,WAEdH,EAAUC,IAAER,IAAI,QAAS,CACvBW,OAAQ,CAAC,WAAY,UACrBC,KAAM,GACNC,OAAQ,CACNL,IAAEM,UAAU,0CAA2C,CACrDC,YACE,mFAKP,IAEHX,IAAMM,WAAU,WAUd,IARA,IAAIM,EAAaR,IAAES,KAAK,CACtBC,QAASpB,EAAQ,KACjBqB,SAAU,CAAC,GAAI,IACfC,UAAWtB,EAAQ,KACnBuB,WAAY,CAAC,GAAI,MAIVC,EAAI,EAAGA,EAAI3B,EAAeC,OAAQ0B,IACzC,KAAIvC,EAAaY,EAAe2B,GAC5BC,EAAWxC,EAAWwC,SAAS/C,SAC/BgD,EAAMD,EAASC,IACfC,EAAOF,EAASG,IAChBvC,EAAOJ,EAAWI,KACTqB,IAAEmB,OAAO,CAACH,EAAKC,GAC1B,CAAER,KAAMD,IACPY,UAAU,MAAQzC,EAAO,QACzB0C,MAAMvB,GACNwB,eAGJ,CAACnC,IAEG,yBAAKoC,GAAG,YCjBFC,G,OA9BA,SAAAlD,GAAU,IACfa,EAAgFb,EAAhFa,eAAgBsC,EAAgEnD,EAAhEmD,WAAYC,EAAoDpD,EAApDoD,UAAWC,EAAyCrD,EAAzCqD,KAAMC,EAAmCtD,EAAnCsD,KAAMC,EAA6BvD,EAA7BuD,UAAWC,EAAkBxD,EAAlBwD,SAAUC,EAAQzD,EAARyD,IAEhF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAKC,KAAN,KACE,uBAAGC,QAAS,kBAAMR,EAAWtC,KAA7B,mBAEF,kBAAC,IAAK6C,KAAN,KACE,uBAAGC,QAAS,kBAAMP,EAAUvC,KAA5B,kBAEF,kBAAC,IAAK6C,KAAN,KACE,uBAAGC,QAAS,kBAAMN,EAAKxC,KAAvB,eAEF,kBAAC,IAAK6C,KAAN,KACE,uBAAGC,QAAS,kBAAML,EAAKzC,KAAvB,eAEF,kBAAC,IAAK6C,KAAN,KACE,uBAAGC,QAAS,kBAAMJ,EAAU1C,KAA5B,kBAEF,kBAAC,IAAK6C,KAAN,KACE,uBAAGC,QAAS,kBAAMH,EAAS3C,KAA3B,iBAEF,kBAAC,IAAK6C,KAAN,KACE,uBAAGC,QAAS,kBAAMF,EAAI5C,KAAtB,yBClBAd,G,OAAUD,IAAVC,OACA6D,EAAWC,IAAXD,OACAE,EAAWC,IAAXD,OAuOOE,MArOf,WAAgB,IAAD,EAC+BzC,mBAAS,IADxC,mBACNV,EADM,KACUoD,EADV,OAE2B1C,mBAAS,cAFpC,mBAEN2C,EAFM,KAEQC,EAFR,OAG+B5C,mBAAS,CAAC,WAAY,WAHrD,mBAGN6C,EAHM,KAGUC,EAHV,OAI2B9C,mBAAS,KAJpC,mBAIN+C,EAJM,KAMPC,GANO,KAMCvD,EAAQ,MAEhBwD,EAAaC,0CAuCbC,EAAU,SAAAC,GACd,OAAOA,EAAIC,QAAQ,MAAO,IAAIC,eA6F1BC,EAAuB,WAC3BP,EACGQ,IACC,gEACA,CACEC,OAAQ,CACNtF,SAAU0E,EAAe,GAAK,IAAMA,EAAe,GACnDa,OAAQX,EACRY,KAAMhB,EACNiB,SAAS,EACT/D,IAAKoD,KAIVY,MAAK,SAAUC,GACdpB,EAAkBoB,EAASC,KAAKC,YAE/BC,OAAM,SAAUC,QAOvB,OACE,kBAAC,IAAD,CAAKC,OAAQ,GAAIxF,UAAU,sBACzB,kBAAC,IAAD,CAAKyF,KAAM,GAAIzF,UAAU,sBACvB,kBAAC,EAAD,CAAO0F,MAAO,GAAd,uBACA,yBAAK1F,UAAU,iBACb,kBAAC,IAAM2F,MAAP,CAAaC,SAAO,GAClB,kBAAClC,EAAD,CACEmC,MAAO,CAAEC,MAAO,OAChBC,YAAY,oBACZ9F,KAAK,QACL8C,GAAG,aACHiD,SAAU,SAAAC,IAzDI,SAACA,GACzB5B,EAAMQ,IAAI,qDAAsD,CAC9DC,OAAQ,CACNoB,QAASD,EAAaE,OAAOzB,QAAQ,IAAK,KAC1CxD,IAAKoD,KAGNY,MAAK,SAAUC,GAEd,IAAMiB,EAAMjB,EAASC,KAAKC,QAAQ,GAAG9C,SAAS/C,SAC9C2E,EAAkB,CAACiC,EAAI5D,IAAK4D,EAAI1D,SAGjC4C,OAAM,SAAUC,OAKnBX,IAwCYyB,CAAkBJ,IAEpBK,aAAW,IAEb,kBAAC,IAAD,CACET,MAAO,CAAEC,MAAO,OAChB7F,KAAK,QACLsG,MAAOvC,EACPwC,SAAU,SAACC,GACTxC,EAAgBwC,KA9CR,CAAC,aAAc,MAAO,QAgDfzF,KAAI,SAAAyD,GAAQ,OAAO,kBAACb,EAAD,CAAQ2C,MAAO9B,GAC9CA,SAMX,yBAAKzE,UAAU,mBACb,kBAAC,EAAD,CAAO0F,MAAO,EAAGG,MAAO,CAAEa,UAAW,SAArC,wBACA,kBAAC,IAAD,CAAUC,QACR,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEhG,eAAgBA,EAChBsC,WA9LK,SAAA2D,GACjB,IAAIC,EAAWD,EAAIE,QACnBD,EAASE,MAAK,SAACC,EAAGC,GAChB,OAAOA,EAAE1G,OAASyG,EAAEzG,UAEtBwD,EAAkB8C,IA0LN3D,UAtLI,SAAA0D,GAChB,IAAIC,EAAWD,EAAIE,QACnBD,EAASE,MAAK,SAACC,EAAGC,GAChB,OAAOD,EAAEzG,OAAS0G,EAAE1G,UAEtBwD,EAAkB8C,IAkLNxD,UA9KI,SAAAuD,GAChB,IAAIC,EAAWD,EAAIE,QACnBD,EAASE,MAAK,SAACC,EAAGC,GAChB,OAAOA,EAAExG,YAAcuG,EAAEvG,eAE3BsD,EAAkB8C,IA0KNvD,SAtKG,SAAAsD,GACf,IAAIC,EAAWD,EAAIE,QACnBD,EAASE,MAAK,SAACC,EAAGC,GAChB,OAAOD,EAAEvG,YAAcwG,EAAExG,eAE3BsD,EAAkB8C,IAkKN1D,KAzJD,SAAAyD,GACX,IAAIC,EAAWD,EAAIE,QACnBD,EAASE,MAAK,SAACC,EAAGC,GAChB,OAAIzC,EAAQwC,EAAE7G,MAAQqE,EAAQyC,EAAE9G,MACvB,EACEqE,EAAQwC,EAAE7G,MAAQqE,EAAQyC,EAAE9G,OAC7B,EAED,KAGX4D,EAAkB8C,IA+INzD,KA3ID,SAAAwD,GACX,IAAIC,EAAWD,EAAIE,QACnBD,EAASE,MAAK,SAACC,EAAGC,GAChB,OAAIzC,EAAQwC,EAAE7G,MAAQqE,EAAQyC,EAAE9G,MACvB,EACEqE,EAAQwC,EAAE7G,MAAQqE,EAAQyC,EAAE9G,OAC7B,EAED,KAGX0G,EAASK,UACTnD,EAAkB8C,IAgINM,QAAS3C,EACTjB,IA7HF,SAAAqD,GACV,IAAI,IAAItE,EAAE,EAAGA,EAAI3B,EAAeC,OAAQ0B,IAAK,CAC3C8E,QAAQC,IAAI1G,EAAe2B,IAC3B,IACMgF,EAAO3G,EAAe2B,GAAGC,SAAS/C,SAASgD,IAC3C+E,EAAOrD,EAAe,GACtBsD,EAAO7G,EAAe2B,GAAGC,SAAS/C,SAASkD,IAC3C+E,EAAOvD,EAAe,GACtBwD,EAAKJ,EAAOK,KAAKC,GAAK,IACtBC,EAAKN,EAAOI,KAAKC,GAAK,IACtBE,GAAMP,EAAOD,GAAQK,KAAKC,GAAK,IAC/BG,GAAMN,EAAOD,GAAQG,KAAKC,GAAK,IAC/BI,EAAIL,KAAKM,IAAIH,EAAK,GAAKH,KAAKM,IAAIH,EAAK,GAC3CH,KAAKO,IAAIR,GAAMC,KAAKO,IAAIL,GACxBF,KAAKM,IAAIF,EAAK,GAAKJ,KAAKM,IAAIF,EAAK,GAE3BI,EAbI,QAYA,EAAIR,KAAKS,MAAMT,KAAKU,KAAKL,GAAIL,KAAKU,KAAK,EAAIL,KAErDrH,EAAe2B,GAAG6F,WAAaA,EAEjC,IAAItB,EAAWD,EAAIE,QACnBD,EAASE,MAAK,SAACC,EAAGC,GAChB,OAAOA,EAAEkB,WAAanB,EAAEmB,cAE1BpE,EAAkB8C,OA0GVyB,QAAS,CAAC,SACVC,UAAU,eAEV,uBAAGvI,UAAU,oBAAoByD,QAAS,SAAAgD,GAAC,OAAIA,EAAE+B,mBAAjD,aACY,kBAACC,EAAA,EAAD,SAIhB,kBAAC,EAAD,CAAmB9H,eAAgBA,KAErC,kBAAC,IAAD,CAAK8E,KAAM,IACT,kBAAC,EAAD,CAAY9E,eAAgBA,EAAgBuD,eAAgBA,OCtO5DwE,G,OAA4BC,IAA5BD,QAAQE,EAAoBD,IAApBC,QAAoBD,IAAXE,OAkBVC,MAhBf,WACE,OACE,kBAAC,IAAD,CAAQ9I,UAAU,gBAChB,kBAAC0I,EAAD,KACE,wBAAI1I,UAAU,QAAd,cAEF,kBAAC4I,EAAD,CAAS/C,MAAO,CAAEkD,QAAS,wBACzB,yBAAK/I,UAAU,uBACb,kBAAC,EAAD,UCXVgJ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SNwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrE,MAAK,SAAAsE,GACJA,EAAaC,gBAEdnE,OAAM,SAAAC,GACL6B,QAAQ7B,MAAMA,EAAMmE,c","file":"static/js/main.ee2260a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/restaurant.6b6405b5.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Card, Typography } from \"antd\";\r\n\r\nimport \"./RestaurantDisplay.css\"\r\n\r\nconst { Title } = Typography;\r\n\r\nconst RestaurantDisplay = (props) => {\r\n  const { allRestaurants } = props;\r\n\r\n  return (\r\n    <div className=\"card-holder-holder\">\r\n      <div className=\"site-card-border-less-wrapper\">\r\n        {(allRestaurants.length === 0) ?\r\n          <img className=\"homePic\" src={require('../restaurant.svg')} alt=\"Logo\" />\r\n          :\r\n          <div>\r\n            {\r\n              allRestaurants.map((restaurant, index) => {\r\n                return (\r\n                  <RestaurantCard key={index} restaurant={restaurant} />\r\n                );\r\n              })\r\n            }\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst RestaurantCard = (props) => {\r\n  const { restaurant } = props;\r\n\r\n  return (\r\n    <Card\r\n      className=\"restaurant-card\"\r\n      size=\"small\"\r\n      title={restaurant.name}\r\n      extra={<a href=\"#\">More</a>} >\r\n      <p className=\"card-text\"><em>{restaurant.vicinity}</em></p>\r\n      <p className=\"card-text\">Rating: {restaurant.rating}</p>\r\n      <p className=\"card-text\">Price Level: {\"$\".repeat(restaurant.price_level)}</p>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default RestaurantDisplay;","import React from 'react';\r\n\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\nimport './MapDisplay.css';\r\n\r\nconst MapDisplay = ({ allRestaurants }) => {\r\n  const [mapObj, setMapObj] = React.useState();\r\n  const [layerGroup, setLayerGroup] = React.useState(new L.LayerGroup())\r\n  const [markers, setMarkers] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    // create map\r\n    setMapObj(L.map('mapid', {\r\n      center: [38.033554, -78.507980], //centered on Cville\r\n      zoom: 16,\r\n      layers: [\r\n        L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\r\n          attribution:\r\n            '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        }),\r\n      ]\r\n    })\r\n    )\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n\r\n    var markerIcon = L.icon({\r\n      iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n      iconSize: [20, 40],\r\n      shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n      shadowSize: [10, 20],\r\n    });\r\n\r\n    //loop thro each nearby restaurant and make a popUp for each\r\n    for (let i = 0; i < allRestaurants.length; i++) {\r\n      let restaurant = allRestaurants[i]\r\n      let geometry = restaurant.geometry.location;\r\n      let lat = geometry.lat;\r\n      let long = geometry.lng;\r\n      let name = restaurant.name\r\n      var marker = L.marker([lat, long],\r\n        { icon: markerIcon })\r\n        .bindPopup(\"<p>\" + name + \"</p>\")\r\n        .addTo(mapObj)\r\n        .openPopup()\r\n    }\r\n\r\n  }, [allRestaurants])\r\n\r\n  return <div id=\"mapid\"></div>\r\n}\r\n\r\nexport default MapDisplay;","import React from \"react\";\r\nimport { render } from \"@testing-library/react\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\n\r\nconst Filter = props => {\r\n  const { allRestaurants, highRating, lowRating, aToZ, zToA, highPrice, lowPrice, far } = props;\r\n\r\n  return (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <a onClick={() => highRating(allRestaurants)}>Highest Rating</a>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <a onClick={() => lowRating(allRestaurants)}>Lowest Rating</a>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <a onClick={() => aToZ(allRestaurants)}>Name (A-Z)</a>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <a onClick={() => zToA(allRestaurants)}>Name (Z-A)</a>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <a onClick={() => highPrice(allRestaurants)}>Highest Price</a>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <a onClick={() => lowPrice(allRestaurants)}>Lowest Price</a>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <a onClick={() => far(allRestaurants)}>Farthest Distance</a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Row, Col, Input, Typography, Dropdown, Menu, AutoComplete, Select } from \"antd\";\r\nimport { DownOutlined } from '@ant-design/icons';\r\n\r\nimport RestaurantDisplay from \"./restaurant-display/RestaurantDisplay.js\";\r\nimport MapDisplay from \"./map-display/MapDisplay.js\";\r\nimport Filter from \"./Filter.js\";\r\n\r\nimport \"./App.css\"\r\n\r\nconst { Title } = Typography;\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\n\r\nfunction App() {\r\n  const [allRestaurants, setAllRestaurants] = useState([]);\r\n  const [locationType, setLocationType] = useState(\"restaurant\");\r\n  const [searchLocation, setSearchLocation] = useState([38.033554, -78.507980]); //starts at CVille\r\n  const [searchRadius, setSearchRadius] = useState(3000); //radius\r\n\r\n  const axios = require(\"axios\");\r\n\r\n  const GP_API_KEY = process.env.REACT_APP_GOOGLE_PLACES_API_KEY;\r\n\r\n  //sort by rating (high to low)\r\n  const highRating = arr => {\r\n    let newArray = arr.slice();\r\n    newArray.sort((a, b) => {\r\n      return b.rating - a.rating;\r\n    });\r\n    setAllRestaurants(newArray);\r\n  };\r\n\r\n  //sort by rating (low to high)\r\n  const lowRating = arr => {\r\n    let newArray = arr.slice();\r\n    newArray.sort((a, b) => {\r\n      return a.rating - b.rating;\r\n    });\r\n    setAllRestaurants(newArray);\r\n  };\r\n\r\n  //sort by price (high to low)\r\n  const highPrice = arr => {\r\n    let newArray = arr.slice();\r\n    newArray.sort((a, b) => {\r\n      return b.price_level - a.price_level;\r\n    });\r\n    setAllRestaurants(newArray);\r\n  };\r\n\r\n  //sort by price (low to high)\r\n  const lowPrice = arr => {\r\n    let newArray = arr.slice();\r\n    newArray.sort((a, b) => {\r\n      return a.price_level - b.price_level;\r\n    });\r\n    setAllRestaurants(newArray);\r\n  };\r\n\r\n  //removes spaces from strings and makes lowercase\r\n  const cleanUp = str => {\r\n    return str.replace(/\\s/g, \"\").toLowerCase();\r\n  };\r\n\r\n  //sort by name (a-z)\r\n  const aToZ = arr => {\r\n    let newArray = arr.slice();\r\n    newArray.sort((a, b) => {\r\n      if (cleanUp(a.name) > cleanUp(b.name)) {\r\n        return 1;\r\n      } else if (cleanUp(a.name) < cleanUp(b.name)) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    setAllRestaurants(newArray);\r\n  };\r\n\r\n  //sort by name (za)\r\n  const zToA = arr => {\r\n    let newArray = arr.slice();\r\n    newArray.sort((a, b) => {\r\n      if (cleanUp(a.name) > cleanUp(b.name)) {\r\n        return 1;\r\n      } else if (cleanUp(a.name) < cleanUp(b.name)) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    newArray.reverse();\r\n    setAllRestaurants(newArray);\r\n  };\r\n\r\n  //Farthest away function\r\n  const far = arr => {\r\n    for(var i=0; i < allRestaurants.length; i++) {\r\n      console.log(allRestaurants[i])\r\n      const R = 6371e3; // metres\r\n      const lat1 = allRestaurants[i].geometry.location.lat;\r\n      const lat2 = searchLocation[0];\r\n      const lon1 = allRestaurants[i].geometry.location.lng;\r\n      const lon2 = searchLocation[1];\r\n      const φ1 = lat1 * Math.PI / 180; // φ, λ in radians\r\n      const φ2 = lat2 * Math.PI / 180;\r\n      const Δφ = (lat2 - lat1) * Math.PI / 180;\r\n      const Δλ = (lon2 - lon1) * Math.PI / 180;\r\n      const d = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n      Math.cos(φ1) * Math.cos(φ2) *\r\n      Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\r\n      const c = 2 * Math.atan2(Math.sqrt(d), Math.sqrt(1 - d));\r\n      const distMeters = R * c; // in metres\r\n      allRestaurants[i].distMeters = distMeters;\r\n    }\r\n    let newArray = arr.slice();\r\n    newArray.sort((a, b) => {\r\n      return b.distMeters - a.distMeters;\r\n    });\r\n    setAllRestaurants(newArray);\r\n  }\r\n\r\n\r\n  //sorts by farthest distance\r\n  const close = arr => {\r\n    let newArray = arr.slice();\r\n    newArray.sort((a, b) => {\r\n      return a.distMeters - b.distMeters;\r\n    });\r\n    setAllRestaurants(newArray);\r\n  };\r\n\r\n  const makePlacesRequest = (searchString) => {\r\n    axios.get('https://maps.googleapis.com/maps/api/geocode/json?', {\r\n      params: {\r\n        address: searchString.trim().replace(\" \", \"+\"),\r\n        key: GP_API_KEY,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        /*The 0 may need to change depending on how the API returns this array*/\r\n        const loc = response.data.results[0].geometry.location;\r\n        setSearchLocation([loc.lat, loc.lng]);\r\n        //setSearchLocation([38.070591, -78.44631099999]); //hardcode cville location\r\n      })\r\n      .catch(function (error) {\r\n        // console.log('ERROR in \"makePlacesRequest\"');\r\n        // console.log(error);\r\n      });\r\n\r\n    getNearByRestaurants();\r\n  };\r\n\r\n  const validLocTypes = [\"restaurant\", \"bar\", \"cafe\"];\r\n  const getNearByRestaurants = () => {\r\n    axios\r\n      .get(\r\n        \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?\",\r\n        {\r\n          params: {\r\n            location: searchLocation[0] + \",\" + searchLocation[1],\r\n            radius: searchRadius,\r\n            type: locationType,\r\n            opennow: true,\r\n            key: GP_API_KEY\r\n          }\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setAllRestaurants(response.data.results);\r\n        //console.log(allRestaurants);\r\n      }).catch(function (error) {\r\n        // console.log('ERROR in \"getNearByRestaurants\"');\r\n        // console.log(error);\r\n      });\r\n\r\n  };\r\n\r\n  return (\r\n    <Row gutter={16} className=\"make-row-vert-span\">\r\n      <Col span={11} className=\"make-col-vert-span\">\r\n        <Title level={2}>Enter your location</Title>\r\n        <div className=\"sticky-search\">\r\n          <Input.Group compact>\r\n            <Search\r\n              style={{ width: '75%' }}\r\n              placeholder=\"input search text\"\r\n              size=\"large\"\r\n              id=\"userSearch\"\r\n              onSearch={searchString => { \r\n                makePlacesRequest(searchString);\r\n              }}\r\n              enterButton\r\n            />\r\n            <Select\r\n              style={{ width: '25%' }}\r\n              size=\"large\"\r\n              value={locationType}\r\n              onChange={(e) => {\r\n                setLocationType(e);\r\n              }}>\r\n                {validLocTypes.map(str => {return <Option value={str}>\r\n                  {str}\r\n                </Option>})}\r\n            </Select>\r\n          </Input.Group>\r\n          \r\n        </div>\r\n        <div className=\"near-you-header\">\r\n          <Title level={2} style={{ marginTop: \"15px\" }}>Restaurants Near You</Title>\r\n          <Dropdown overlay={\r\n            <Menu>\r\n              <Filter\r\n                allRestaurants={allRestaurants}\r\n                highRating={highRating}\r\n                lowRating={lowRating}\r\n                highPrice={highPrice}\r\n                lowPrice={lowPrice}\r\n                aToZ={aToZ}\r\n                zToA={zToA}\r\n                cleanup={cleanUp}\r\n                far={far}\r\n              />\r\n            </Menu>\r\n          }\r\n            trigger={['click']}\r\n            placement=\"bottomRight\"\r\n          >\r\n            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n              Filter by <DownOutlined />\r\n            </a>\r\n          </Dropdown>\r\n        </div>\r\n        <RestaurantDisplay allRestaurants={allRestaurants} />\r\n      </Col>\r\n      <Col span={13}>\r\n        <MapDisplay allRestaurants={allRestaurants} searchLocation={searchLocation} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport App from \"../App.js\"\r\nimport \"./layout.css\";\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nfunction AppLayout() {\r\n  return (\r\n    <Layout className=\"whole-layout\">\r\n      <Header>\r\n        <h2 className=\"logo\">Food Out!</h2>\r\n      </Header>\r\n      <Content style={{ padding: '20px 50px 20px 50px' }}>\r\n        <div className=\"site-layout-content\">\r\n          <App />\r\n        </div>\r\n      </Content>\r\n      {/* <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer> */}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default AppLayout;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport AppLayout from './layout/AppLayout';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppLayout />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}